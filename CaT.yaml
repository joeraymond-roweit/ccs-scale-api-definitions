openapi: 3.0.0
servers:
  - url: 'https://crowncommercial.gov.uk'
    description: demo
  - url: 'http://localhost:3000'
    description: localhost
info:
  version: 0.1.0
  title: CaT API 
  description: >-
    CCS CaT API is a modern REST API based on the [JSON API
    spec](https://jsonapi.org/) which provides you with necessary endpoints.

    Download [official JavaScript & TypeScript
    SDK](https://github.com/spree/spree-storefront-api-v2-js-sdk)

    Import to
    [Postman](https://raw.githubusercontent.com/......./index.yaml)
  contact:
    name: Nick Openshaw
    url: 'https://crowncommercial.gov.uk'
    email: nicholas.openshaw@crowncommercial.gov.uk
  license:
    name: 'https://github.com/.../license.md'
    url: BSD-3-Clause
    
security:
#    - ApiKeyAuth: []
  - OAuth2:
    - read
    - write
  - openID: 
    - read
    - write
  
# The syntax is:
# - scheme name:
#     - scope 1
#     - scope 2

    
paths:

  /cat/account/{self}/tsandcs:
    parameters:
        - $ref: '#/components/parameters/SelfParam'
    get:
      description: Retrieve the terms and conditions required for CaT and if the user has signed up to them.
      tags:
        - Ts and Cs
      operationId: Ts and Cs
      responses:
        '200':
          description: ok
          content:
            application/vnd.api+json:
              schema:
                $ref: 'https://raw.githubusercontent.com/ronin1972/ccs-scale-api-definitions/master/OCDS_Schema.yaml#/components/schemas/TsAndCs'
              
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - openID: 
          - read
          - write
      summary: Ts and Cs
      
  /cat/organisation/{orgID}/teams:
    parameters:
        - $ref: '#/components/parameters/OrgParam'
    get:
      description: Retrieve a list of CaT teams created by the organisation.
      tags:
        - Teams
      operationId: Org Teams
      responses:
        '200':
          description: ok
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TeamList'
              
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'

      summary: List of organisations teams
      security:
        - OAuth2:
          - buyer
    post:
      description: Create a new Team.
      tags:
        - Teams
      operationId: Create Team
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        '200':
          description: ok
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GenericID'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: Create a new team
      
      
  /cat/organisation/{orgID}/teams/{teamID}:
    parameters:
        - $ref: '#/components/parameters/OrgParam'
        - $ref: '#/components/parameters/TeamParam'
    delete:
      description: Delete the CaT team within the organisation.
      tags:
        - Teams
      operationId: Delete Team
      responses:
        '200':
          description: ok
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TeamList'
              
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: Delete team
      
  /cat/organisation/{orgID}/teams/{teamID}/members:
    parameters:
        - $ref: '#/components/parameters/OrgParam'
        - $ref: '#/components/parameters/TeamParam'
    get:
      description: Retrieve a list of members of a team..
      tags:
        - Teams
      operationId: Team Members
      responses:
        '200':
          description: ok
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TeamList'
              
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: List of Team members
      
    put:
      description: Add a team member to a team.
      tags:
        - Teams
      operationId: Add Team Member
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        '200':
          description: ok
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GenericID'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: Add team member
      
  /cat/organisation/{orgID}/teams/{teamID}/members/{teamMemberID}:
    parameters:
        - $ref: '#/components/parameters/OrgParam'
        - $ref: '#/components/parameters/TeamParam'
        - $ref: '#/components/parameters/TeamMemberParam'
    delete:
      description: Delete the CaT team within the organisation.
      tags:
        - Teams
      operationId: Delete Team Member
      responses:
        '200':
          description: ok
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TeamList'
              
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: List of Team members
      
  /cat/account/{self}/teams:
    parameters:
        - $ref: '#/components/parameters/SelfParam'
    get:
      description: Retrieve a list of CaT teams that the user is a member of.
      tags:
        - Teams
      operationId: Users Teams
      responses:
        '200':
          description: ok
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TeamList'
              
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: List of users teams
      
  /cat/rfxtypes:
    get:
      description: Retrieve a list of RFx Types we can choose from
      tags:
        - Base Data
      operationId: rfx Types
      responses:
        '200':
          description: ok
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RFxTypes'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: List RFx types
      
  /cat/procurementCase/defaultName/agreements/{agreementID}/lots/{lotID}:
    parameters: 
      - $ref: '#/components/parameters/OrgParam'
      - $ref: '#/components/parameters/AgreementParam'
      - $ref: '#/components/parameters/LotParam'
    get:
      description: Retrieve a default name fora Procurement Case using a given agreement.
      tags:
        - Create Case
      operationId: Default Name
      responses:
        '200':
          description: ok
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DefaultName'
              
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: Get Default Name
      
  /cat/ProcurementCase/GMTransfer:
    parameters: 
      - $ref: '#/components/parameters/OrgParam'
    post:
      description: Create a new Team.
      tags:
        - Create Case
      operationId: CreateGMCase
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GenericID'
      responses:
        '200':
          description: ok
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DefaultName'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: Tranfer from Guided Match    
      
  /cat/ProcurementCase/FMTransfer:
    parameters: 
      - $ref: '#/components/parameters/FMParam'
    post:
      deprecated: true
      description: Create Facilities Management procurement case.
      tags:
        - Create Case
      operationId: CreateFMCase
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DefaultName'
      responses:
        '200':
          description: ok
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Release'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: Tranfer from Facilities Managment 
      
  /cat/ProcurementCase/Agreement:
    parameters: 
      - $ref: '#/components/parameters/AgreementParam'
    post:
      description: Create a new procurement for the chosen Agreement.
      tags:
        - Create Case
      operationId: CreateAgreementCase
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AgreementID'
      responses:
        '200':
          description: ok
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ProcurementID'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: Create from an Agreement
      
  /cat/ProcurementCase/{procID}/confirm:
    parameters: 
      - $ref: '#/components/parameters/ProcurementParam'
    post:
      description: Confirm the details transfered or created for the agreement are what the user wants.
      tags:
        - Create Case
      operationId: ConfirmProcurementCase
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GenericID'
      responses:
        '200':
          description: ok
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GenericID'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: Confirm procurement case 
      
  /CaT/ProcurementCase/{procID}/status:
    parameters: 
      - $ref: '#/components/parameters/ProcurementParam'
    get:
      description: Get RFx's status's for this case (Is this the same as get RFx's?)
      tags:
        - Define Case
      operationId: RFXStatus
      responses:
        '200':
          description: ok
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ProcessStage'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: Get get RFx statuses on case
      
  /cat/ProcurementCase/{procID}/rfxs:
    parameters: 
      - $ref: '#/components/parameters/ProcurementParam'
    get:
      description: Get RFx's for this case. In OCDS this is the related cases of Type
      tags:
        - Define Case
      operationId: caseRFXs
      responses:
        '200':
          description: ok
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RFxStatus'
              
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: Get RFx's for case
      
    post:
      description: Creates a new RFx for the case.
      tags:
        - Define Case
      operationId: createCaseRFx
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tender'
      responses:
        '200':
          description: ok
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GenericID'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: Confirm procurement case 
      
  /cat/ProcurementCase/{procID}/rfxs/{rfxID}/HLNeeds:
    parameters: 
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/RFxParam'
    get:
      description: Get the High Level needs requirted for the RFx for this case
      tags:
        - Define Case
      operationId: HLNeeds
      responses:
        '200':
          description: ok
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Criteria'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: Get High Level Needs
      
  /cat/ProcurementCase/{procID}/rfxs/{rfxID}/HLNeeds/{hlNeedID}/forms:
    parameters: 
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/RFxParam'
      - $ref: '#/components/parameters/HLNeedParam'
    get:
      description: Get form data for this high level need.
      tags:
        - Define Case
      operationId: HLNeedForm
      responses:
        '200':
          description: ok
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Criterion'
              
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: Get HL Need forms
      
    put:
      description: Updates form data for a High Level Need.
      tags:
        - Define Case
      operationId: updateHLNeedForm
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Requirement'
      responses:
        '200':
          description: ok
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GenericID'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: Confirm procurement case 

  /cat/ProcurementCase/{procID}/rfxs/{rfxID}/HLNeeds/{hlNeedID}/documents:
    parameters: 
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/RFxParam'
      - $ref: '#/components/parameters/HLNeedParam'
    get:
      description: Get RFx's for this case
      tags:
        - Define Case
      operationId: HLNeedDocument
      responses:
        '200':
          description: ok
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DocumentList'
              
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: Get Default Name
      
    put:
      description: Creates a new RFx for the case.
      tags:
        - Define Case
      operationId: updateHLNeedDocument
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Document'
      responses:
        '200':
          description: ok
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GenericID'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: Confirm procurement case 
      
  /cat/ProcurementCase/{procID}/rfxs/{rfxID}/suppliers:
    parameters: 
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/RFxParam'
    get:
      description: Get RFx's for this case
      tags:
        - Define Case
      operationId: Suppliers
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationReference'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: List Suppliers on RFx
    post:
      description: Creates a new RFx for the case.
      tags:
        - Define Case
      operationId: addSupplier
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationReference'
      responses:
        '201':
          $ref: '#/components/responses/201Success'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: Update Suppliers on RFx 
    
  /cat/ProcurementCase/{procID}/rfxs/{rfxID}/suppliers/{supplierID}:
    parameters: 
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/RFxParam'
      - $ref: '#/components/parameters/SupplierParam'
    delete:
      description: Creates a new RFx for the case.
      tags:
        - Define Case
      operationId: removeSuppliers
      responses:
        '200':
          $ref: '#/components/responses/200Success'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: Update Suppliers on RFx 
      
  /CaT/ProcurementCase/{procID}/rfxs/{rfxID}:
    parameters: 
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/RFxParam'
    get:
      description: Gets Summary Data for RFx
      tags:
        - Define Case
      operationId: RFxSummary
      responses:
        '200':
          description: ok
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Tender'
              
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: Get RFx Summary
      
      
  /CaT/ProcurementCase/{procID}/rfx/{rfxID}/GotoMarket/options:
    parameters: 
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/RFxParam'
    get:
      description: Get the options open to go to market
      tags:
        - Manage Case
      operationId: GoToMarketOptions
      responses:
        '200':
          description: ok
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ProcurementMethods'
              
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: Get Go to market options
      
  /CaT/ProcurementCase/{procID}/rfxs/{rfxID}/GotoMarket/:
    parameters: 
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/RFxParam'
    put:
      description: Release the RFX to the market.
      tags:
        - Manage Case
      operationId: GotoMarket
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TenderRelease'
      responses:
        '200':
          description: ok
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GenericID'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: Go to market 
      
  /CaT/ProcurementCase/{procID}/rfxs/{rfxID}/GotoMarket/extend:
    parameters: 
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/RFxParam'
    put:
      description: Extend the end date for responses to the RFx.
      tags:
        - Manage Case
      operationId: extendRFx
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExtendCriteria'
      responses:
        '200':
          $ref: '#/components/responses/200Success'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: Extend the RFx 
      
  /CaT/ProcurementCase/{procID}/rfxs/{rfxID}/status:
    parameters: 
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/RFxParam'
    get:
      description: Gets the status of a and RFX within a process.
      tags:
        - Manage Case
      operationId: RFxStatus
      responses:
        '200':
          description: ok
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ProcessStage'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: Get RFx status
      
  /CaT/ProcurementCase/{procID}/rfxs/{rfxID}/responses:
    parameters: 
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/RFxParam'
    get:
      description: Get responses from all suppliers
      tags:
        - Responses
      operationId: allResponses
      responses:
        '200':
          description: ok
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RequirementResponses'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: Get all responses to an RFx
      
  /CaT/ProcurementCase/{procID}/rfxs/{rfxID}/responses/suppliers/{supplierID}:
    parameters: 
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/RFxParam'
      - $ref: '#/components/parameters/SupplierParam'
    get:
      description: Get responses from a supplier
      tags:
        - Responses
      operationId: SupplierResponses
      responses:
        '200':
          description: ok
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RequirementResponses'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: Get responses from a supplier to an RFx
      
  /CaT/ProcurementCase/{procID}/rfxs/{rfxID}/responses/{responseID}:
    parameters: 
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/RFxParam'
      - $ref: '#/components/parameters/ResponseParam'
    get:
      description: Get responses Details
      tags:
        - Responses
      operationId: ResponseDetail
      responses:
        '200':
          description: ok
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RequirementResponse'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: Get response details
      
  /CaT/ProcurementCase/{procID}/rfxs/{rfxID}/responses/{responseID}/HLNeeds:
    parameters: 
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/RFxParam'
      - $ref: '#/components/parameters/ResponseParam'
    get:
      description: Get a list of HL Needs within the response for the RFx within the Procurement event. (May only ever be one in List). Indicates which have mandatory details complete. Offline will just verify file exists) 
      tags:
        - Responses
      operationId: HLNeedsResponse
      responses:
        '200':
          description: ok
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RequirementResponses'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: Get response HL Needs
      
  /CaT/ProcurementCase/{procID}/rfxs/{rfxID}/responses/{responseID}/HLNeeds/{hlNeedID}/forms:
    parameters: 
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/RFxParam'
      - $ref: '#/components/parameters/ResponseParam'
      - $ref: '#/components/parameters/HLNeedParam'
    get:
      description: Gets the response data held within the needs form specified (May be blank, pre-populated or contain data previously entered)
      tags:
        - Responses
      operationId: HLNeedsFormResponse
      responses:
        '200':
          description: ok
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RequirementResponse'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: Get response details
      
    put:
      description: Updates Suppliers response to High Level needs fields
      tags:
        - Supplier
      operationId: updateHLNeedFormResponse
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GenericID'
      responses:
        '200':
          description: ok
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GenericID'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: Update form response 
      
  /CaT/ProcurementCase/{procID}/rfxs/{rfxID}/responses/{responseID}/HLNeeds/{hlNeedID}/documents:
    parameters: 
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/RFxParam'
      - $ref: '#/components/parameters/ResponseParam'
      - $ref: '#/components/parameters/HLNeedParam'
    get:
      description: Gets a file that can be updated off line and then uploaded when complete. (Should this always be blank or only the first time?)
      tags:
        - Responses
      operationId: HLNeedsDocumentResponse
      responses:
        '200':
          description: ok
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DocumentList'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: Get response details
      
    post:
      description:   Replaces the response file stored against this need.
      tags:
        - Supplier
      operationId: updateHLNeedDocumentResponse
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Document'
      responses:
        '200':
          description: ok
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GenericID'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: Update document response 
  
  /CaT/ProcurementCase/{procID}/rfxs/{rfxID}/responses/suppliers/{supplierID}/complete:
    parameters: 
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/RFxParam'
      - $ref: '#/components/parameters/SupplierParam'
    post:
      description: Indicates that the Supplier is happy for the response to go to the Buyer
      tags:
        - Supplier
      operationId: supplierResponseComplete
      responses:
        '200':
          description: ok
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GenericID'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: Supplier Complete
      
  /CaT/ProcurementCase/{procID}/rfxs/{rfxID}/responses/furtherInfo:
    parameters: 
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/RFxParam'
    get:
      description: Get a request for further information (includes free text and any files}
      tags:
        - Further Information
      operationId: furtherInfoRequest
      responses:
        '200':
          description: ok
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Enquiries'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: Request Further Info
      
    post:
      description: Create a new porocurement for the chosen Agreement.
      tags:
        - Further Information
      operationId: createFurtherInfoRequest
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Enquiry'
      responses:
        '200':
          description: ok
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GenericID'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: Create further info request
      
    
      
  /CaT/ProcurementCase/{procID}/rfxs/{rfxID}/responses/suppliers/{supplierID}/furtherInfo:
    parameters: 
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/RFxParam'
      - $ref: '#/components/parameters/SupplierParam'
    get:
      description: Get a request for further information (includes free text and any files}
      tags:
        - Further Information
      operationId: supplierFurtherInfoRequest
      responses:
        '200':
          description: ok
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Enquiries'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: Request Supplier Further Info
      
    post:
      description: Create a new porocurement for the chosen Agreement.
      tags:
        - Further Information
      operationId: createSupplierFurtherInfoRequest
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Enquiry'
      responses:
        '200':
          description: ok
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GenericID'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: Create supplier further info request
      
    put:
      description: Respond to a Request for further information 
      tags:
        - Supplier
      operationId: supplierFurtherInfo
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GenericID'
      responses:
        '200':
          description: ok
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GenericID'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: Resturn Further Info
      
  /CaT/ProcurementCase/{procID}/rfxs/{rfxID}/responses/export:
    parameters: 
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/RFxParam'
    get:
      description: Export all responses for all suppliers on an RFx
      tags:
        - Responses
      operationId: exportAllResponses
      responses:
        '200':
          description: ok
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
            application/msword:
              schema:
                type: string
                format: binary
            application/vnd.openxmlformats-officedocument.wordprocessingml.document:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: Export all responses
      
  /CaT/ProcurementCase/{procID}/rfxs/{rfxID}/scores:
    parameters: 
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/RFxParam'
    get:
      description: Get scores for all suppliers on an RFx
      tags:
        - Scoring
      operationId: allScores
      responses:
        '200':
          description: ok
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GenericID'
        '400':
          $ref: '#/components/responses/400InvalidRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: Get all scores for an RFx
  
 
      
  /CaT/ProcurementCase/{procID}/rfxs/{rfxID}/scores/suppliers/{supplierID}/:
    parameters: 
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/RFxParam'
      - $ref: '#/components/parameters/SupplierParam'
    put:
      description: Updates a suppliers score for an RFx
      tags:
        - Scoring
      operationId: SupplierScore
      responses:
        '200':
          description: ok
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GenericID'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: Update supplier score
      
  /CaT/events:
    get:
      description: |
        Gets Events that have not been responded to
        * Procurements Events Issued (Supplier)
        * Responses to Procurement events (Buyer)
        * Procurement Events Closed (Buyer/Supplier)
        * Procurement Events Terminated (Supplier)
        * Request for further Information (Supplier)
        * Response to further information (Buyer)
        * Awards (Supplier)
        * Procurement Cases Terminated (Supplier)
        * Contract Signature (Buyer/Supplier) 
      tags:
        - Notification
      operationId: events
      responses:
        '200':
          description: ok
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GenericID'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: Get all scores for an RFx
      
  /CaT/ProcurementCase/{procID}/rfxs/{rfxID}/terminate/options:
    parameters: 
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/RFxParam'
      - $ref: '#/components/parameters/SupplierParam'
      
    get:
      description: Respond to a Request for further information 
      tags:
        - Manage Case
      operationId: terminateOptions
      responses:
        '200':
          description: ok
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TerminationTypes'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: Request options for termination
      
  /CaT/ProcurementCase/{procID}/rfxs/{rfxID}/terminate/:
    parameters: 
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/RFxParam'
    put:
      description: Terminate the RFx
      tags:
        - Manage Case
      operationId: terminate
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TerminationType'
      responses:
        '200':
          description: ok
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GenericID'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: Terminate RFx
      
  /CaT/ProcurementCase/{procID}/rfxs/{rfxID}/award/:
    parameters: 
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/RFxParam'
    put:
      description: Awards the contract to a supplier. RFx must be of type RFP 
      tags:
        - Manage Case
      operationId: award
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Award'
      responses:
        '200':
          description: ok
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GenericID'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - buyer
      summary: Award Procurement
      
  /CaT/ProcurementCase/{procID}/rfxs/{rfxID}/signed/:
    parameters: 
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/RFxParam'
    put:
      description: Indicate the contract has been signed.
      tags:
        - Manage Case
      operationId: signed
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Contract'
      responses:
        '200':
          description: ok
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GenericID'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      security:
        - OAuth2:
          - write
        - openID:
          - write
      summary: Sign Procurement
